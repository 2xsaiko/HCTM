import net.fabricmc.loom.task.RemapJar

import static org.gradle.api.JavaVersion.VERSION_1_8

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.30'
    id 'fabric-loom' version '0.2.2-SNAPSHOT' apply false
}

allprojects {
    apply plugin: 'fabric-loom'

    java {
        sourceCompatibility = VERSION_1_8
        targetCompatibility = VERSION_1_8
    }

    compileKotlin {
        kotlinOptions.jvmTarget = '1.8'
        kotlinOptions.freeCompilerArgs += '-Xuse-experimental=kotlin.ExperimentalUnsignedTypes'
    }

    group = "therealfarfetchd.hctm"

    dependencies {
        minecraft group: "com.mojang", name: "minecraft", version: minecraft_version
        mappings group: "net.fabricmc", name: "yarn", version: mappings_version
        modCompile group: "net.fabricmc", name: "fabric-loader", version: loader_version

        modCompile group: "net.fabricmc", name: "fabric", version: fabric_api_version
        compile group: "net.fabricmc", name: "fabric-language-kotlin", version: fabric_kotlin_version
        compileOnly group: "org.jetbrains.kotlin", name: "kotlin-stdlib", version: kotlin_version
        compileOnly group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8", version: kotlin_version

        modCompile group: "grondag", name: "frex", version: frex_version
        modCompile group: "grondag", name: "canvas", version: canvas_version
        compile group: "org.joml", name: "joml", version: "1.9.14"
    }

    configurations {
        dev
    }

    repositories {
        mavenLocal()
        maven { url 'https://maven.shadowfacts.net' }
        maven { url 'https://minecraft.curseforge.com/api/maven' }
        maven { url 'https://grondag-repo.appspot.com'; credentials { username 'guest'; password '' } }
    }

    afterEvaluate {
        artifacts {
            dev file: file("${project.buildDir}/libs/$archivesBaseName-${version}-dev.jar"), type: "jar", builtBy: remapJar
        }

        processResources {
            inputs.property "version", project.version

            from(sourceSets.main.resources.srcDirs) {
                include "fabric.mod.json"
                expand "version": project.version
            }

            from(sourceSets.main.resources.srcDirs) {
                exclude "fabric.mod.json"
            }
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

subprojects {
    task remapMavenJar(type: Copy, dependsOn: remapJar) {
        afterEvaluate {
            from("${project.buildDir}/libs/$archivesBaseName-${version}.jar")
            into("${project.buildDir}/libs/")
            rename { String fn -> "$archivesBaseName-${version}-maven.jar" }
        }
    }
}

task remapMavenJar(type: RemapJar, dependsOn: remapJar) {
    afterEvaluate {
        jar = file("${project.buildDir}/libs/${archivesBaseName}-${version}-dev.jar")
        destination = file("${project.buildDir}/libs/${archivesBaseName}-${version}-maven.jar")
        nestJar = false
    }
}

dependencies {
    afterEvaluate {
        subprojects.each { compile it }
    }
}